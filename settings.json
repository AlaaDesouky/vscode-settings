{
  // Editor
  "editor.fontFamily": "'Fira Code', 'Cascadia Coda', Consolas, 'Courier New', monospace",
  "editor.fontLigatures": true,
  "editor.formatOnSave": true,
  "editor.formatOnPaste": true,
  "editor.tabSize": 2,
  "editor.minimap.autohide": true,
  "editor.fontSize": 18,
  "editor.scrollbar.horizontal": "hidden",
  "editor.scrollbar.vertical": "hidden",
  "editor.cursorSurroundingLines": 10,

  // Workbench
  "workbench.sideBar.location": "right",
  "workbench.colorTheme": "Ayu Mirage",

  // Formatting
  "editor.defaultFormatter": "esbenp.prettier-vscode",

  // Formatter for Go files
  "[go]": {
    "editor.defaultFormatter": "golang.go"
  },

  // Formatter for py files
  "[py]": {
    "editor.defaultFormatter": "ms-python.python"
  },

  // Formatter for js/ts files
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  // Formatter for jsx/tsx files
  "[javascriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  // Terminal
  "terminal.integrated.defaultProfile.windows": "PowerShell",
  "terminal.integrated.shell.windows": "C:\\Program Files\\Git\\bin\\bash.exe",
  "terminal.integrated.fontFamily": "CaskaydiaCove Nerd Font Mono",
  "emmet.includeLanguages": {
    "javascript": "javascriptreact"
  },
  "chatgpt.lang": "en",
  "window.zoomLevel": -1,
  "thunder-client.codeSnippetLanguage": "cs-httpclient",
  "git.autofetch": true,
  "typescript.preferences.quoteStyle": "single",
  "html.completion.attributeDefaultValue": "singlequotes",
  "fileutils.newFile.typeahead.enabled": false,
  "markdown-preview-enhanced.previewTheme": "atom-dark.css",
  "bracketPairColorizer.depreciation-notice": false,
  "javascript.preferences.quoteStyle": "single",

  // Vim
  "vim.leader": "<space>",
  "vim.highlightedyank.enable": true,
  "vim.highlightedyank.color": "#a9dc7660",
  "vim.highlightedyank.duration": 250,
  "vim.insertModeKeyBindings": [
    // {
    //   "before": ["j", "j"],
    //   "after": ["<Esc>"]
    // }
  ],
  "vim.visualModeKeyBindings": [
    { "before": ["<"], "commands": ["editor.action.outdentLines"] },
    { "before": [">"], "commands": ["editor.action.indentLines"] },
    { "before": ["J"], "commands": ["editor.action.moveLinesDownAction"] },
    { "before": ["K"], "commands": ["editor.action.moveLinesUpAction"] },
    { "before": ["<leader>", "c"], "commands": ["editor.action.commentLine"] },
    {
      "before": ["<leader>", "y"],
      "commands": ["editor.action.clipboardCopyAction"]
    },
    {
      "before": ["<leader>", "p"],
      "commands": ["_dp"]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    // Switch tabs
    { "before": ["<S-h>"], "commands": [":bprevious"] },
    { "before": ["<S-l>"], "commands": [":bnext"] },
    // Splits
    { "before": ["<leader>", "v"], "commands": [":vsplit"] },
    { "before": ["<leader>", "s"], "commands": [":split"] },
    // Panels
    {
      "before": ["<leader>", "h"],
      "commands": ["workbench.action.focusLeftGroup"]
    },
    {
      "before": ["<leader>", "j"],
      "commands": ["workbench.action.focusBelowGroup"]
    },
    {
      "before": ["<leader>", "k"],
      "commands": ["workbench.action.focusAboveGroup"]
    },
    {
      "before": ["<leader>", "l"],
      "commands": ["workbench.action.focusRightGroup"]
    },

    // Commands
    { "before": ["<leader>", "c"], "commands": ["editor.action.commentLine"] },
    {
      "before": ["<leader>", "d"],
      "after": ["d", "d"]
    },
    {
      "before": ["<leader>", "p"],
      "after": [],
      "commands": [
        {
          "command": "workbench.action.quickOpen"
        }
      ]
    },
    { "before": ["<leader>", "w"], "commands": [":w!"] },
    { "before": ["<leader>", "q"], "commands": [":q!"] },
    { "before": ["<leader>", "x"], "commands": [":x!"] }
  ],
  "go.toolsManagement.autoUpdate": true,
  "explorer.compactFolders": false,
  "editor.lineNumbers": "relative",
  "workbench.colorCustomizations": {},
  "terminal.integrated.env.windows": {},
  "prisma.showPrismaDataPlatformNotification": false,
  "workbench.iconTheme": "material-icon-theme",
  "editor.wordWrap": "on",
  "makefile.configureOnOpen": true
}
